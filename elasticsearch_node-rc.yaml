heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running elasticsearch.

parameters:

  image:
    label: Server Image
    description: Operating system to use for your server.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)

  flavor:
    description: Flavor for Cloud Servers
    type: string
    default: 2 GB General Purpose v1

  server_hostname:
    description: Hostname for the server.
    type: string
    default: elasticsearch-%index%

  ssh_keypair_name:
    description: Nova keypair name for ssh access to the server
    type: string

  ssh_private_key:
    description: private key to access the created servers
    type: string

  es_password:
    description: password for HTTP basic auth
    type: string

  es_auth_user:
    description: User name for HTTP basic authentication to Elasticsearch endpoint
    type: string
    default: es_user

  es_version:
    description: Version of Elasticsearch to deploy
    type: string
    default: "1.4.3"

  stack_id:
    description: Stack ID
    type: string

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rackspace-orchestration-templates/elasticsearch

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 12.3.0

  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
    immutable: true
resources:

  es_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }
      metadata:
        rax-heat: { get_param: "stack_id" }
      networks:
      - network: "11111111-1111-1111-1111-111111111111"
      - network: { get_param: rc_network_name }

  es_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: es_server
    properties:
      username: root
      private_key: { get_param: ssh_private_key }
      host: { get_attr: [es_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      data_bags:
        elasticsearch:
          id: users
          _default:
            users:
              - username: { get_param: es_auth_user }
                password: { get_param: es_password }
          nginx:
            port: 80
      node:
        elasticsearch:
          version: { get_param: es_version }
          cluster:
            name: heated_cluster
        run_list: ["recipe[apt]",
                   "recipe[rax-elasticsearch]"]


outputs:
  es_server_ip:
    value: { get_attr: [es_server, networks, { get_param: rc_network_name }, 0] }

  es_private_ip:
    value: { get_attr: [es_server, networks, private, 0] }
